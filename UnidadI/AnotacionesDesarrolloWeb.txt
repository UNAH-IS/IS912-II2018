HTML (HyperText Markup Language): Para definir la estructura de una pagina web.
XML (Xtensible Markup Language)

<etiqueta>
</etiqueta>



CSV:
Pedro,35,Masculino,666789


XML:
<persona>
    <nombre>Pedro</nombre>
    <edad>35</edad>
    <genero>MAsculino</genero>
    <telefono>666789</telefono>
</persona>

JSON
persona = {
    nombre:"Pedro",
    edad:35,
    genero:"Masculino",
    telefono:666789
}



En caso de que no este la carpeta node_modules se pueden instalar todos los modulos de dependencia utilizando el comando npm install dentro de la carpeta del proyecto.





Direccion IP: 0.0.0.0 - 255.255.255.255
Sirve para identificar a una computadora en una red.
    Direcciones IP privadas:
        Rangos de ips.
    Direcciones IP publicas:
        Rangos de ips.


IP de google: 216.58.192.36

Nombre de dominio: Alias o nombre para una direccion IP.
Empresas comunes:
    Godaddy
    Heroku
    puntohn (Local, Red de desarrollo sostenible en HN)


Hosting/Hospedaje: ip publica, Disco duro y servicios para publicar una web.
Nombre de dominio: Alias para enlazar a una direccion ip publica

Apache: Servidor para publicar paginas desarrolladas en PHP

WAMP - WindowsApacheMysqlPHP (Descargar antes VisualC .net framework)
LAMPP - LinuxApacheMysqlPHP-Perl
MAMP - MacApacheMysqlPHP
XAMPP - X SO ApacheMysqlPHP Perl



Apache es un programa tipo servicio, demonio o programa en segundo plano: Por lo general no tienen GUI
    Ver servicios en windows: Panel de control - Herramientas Administrativas - Servicios





Servidor web con NodeJS
1. Instalar NodeJS
2. Crear una carpeta para cada proyecto.
3. Acceder a la carpeta del proyecto desde la consola.
4. Ejecutar el comando npm init   //npm (Node Package Manager)
    Sirve para crear una nueva aplicacion en NodeJS, crea un archivo 
    de configuraciones con el nombre package.json
5. Crear el archivo de punto de partida, es decir el servidor (index.js).
6. Instalar el framework o modulo express: npm install express --save
7. Programar el servidor: 
            /////////////////////////////////////////
            //Servidor web en nodeJS para publicar archivos estaticos.
            var express = require("express");
            var app = express();

            //Exponer una carpeta como publica, unicamente para archivos estaticos: .html, imagenes, .css, .js
            app.use(express.static("www"));

            //Crear y levantar el servidor web.
            app.listen(3000);
            console.log("Servidor iniciado");
            ////////////////////////////////////////
8. Exponer carpeta publica para archivos estaticos del lado del cliente.
9. Ejecutar el servidor utilizando el siguiente comando:
    node index.js
10. Acceder a los archivos desde un navegador utilizando:
    localhost:PUERTO/nombre-archivo


npm install nombremodulo



Hojas de estilo en cascada - CSS (Cascading Stylesheets)
Es posible aplicar estilos de la siguiente forma:
1. Estilos en linea: Se usan directamente en la etiqueta en la cual se quiere aplicar los estilos. 
    Se implementan utilizando el ATRIBUTO style. La sintaxis para configurar los estilos es:
        nombre-estilo-1:valor-estilo-1;nombre-estilo-2:valor-estilo-2;...;nombre-estilo-N:valor-estilo-N;
2. Estilos en el enacabezado de la página
    Se implementan utilizando la etiqueta style (definirla dentro de la etiqueta head) y dentro de ella se definen los estilos agrupados por selectores.
    Los selectores son identificadores que ayudan a enlazar los estilos definidos con las etiquetas a las cuales se aplicaran.
    Los selectores que se pueden utilizar son:
    -IDs: Se hace referencia a ellos poniendo como prefijo el simbolo numeral y luego definiendo los estilos:
        #id{
            nombre-estilo-1:valor-estilo-1;
            nombre-estilo-2:valor-estilo-2;
            ...;
            nombre-estilo-N:valor-estilo-N;    
        }

    -Mediante los nombres de las etiquetas. Para definirlos basta con poner el nombre de la etiqueta y escribir los estilos entre llaves
        nombre-etiqueta{
            nombre-estilo-1:valor-estilo-1;
            nombre-estilo-2:valor-estilo-2;
            ...;
            nombre-estilo-N:valor-estilo-N;    
        }
    -Mediante clases CSS
        Se definen utilizando como prefijo un punto seguido del nombre de la clase CSS.
        .nombre-clase{
            nombre-estilo-1:valor-estilo-1;
            nombre-estilo-2:valor-estilo-2;
            ...;
            nombre-estilo-N:valor-estilo-N;    
        }

        Para aplicar una clase css a una etiqueta se utiliza el atributo class.
        Se pueden asignar varias clases CSS a una etiqueta separandolas por un espacio.
3. Estilos en archivos externos:
    Se escriben los estilos en un archivo con extensión css y se incluyen en el html de la siguiente forma:
        <link href="url-estilos.css" rel="stylesheet">